package(default_visibility = ["//visibility:public"])


load("@rules_cc//cc:defs.bzl", "cc_binary")

load("@com_github_nelhage_rules_boost//:boost/boost.bzl", "boost_deps")

# boost_deps() will re-download the tarball every time BUILD.boost
# changes, which is frustrating for doing development. Download it
# yourself, uncomment the below and change the path as appropriate
# for a faster iteration cycle on changes.
#
# new_local_repository(
#     name = "boost",
#     build_file = "@com_github_nelhage_rules_boost//:BUILD.boost",
#     path = "/home/nelhage/code/boost_1_71_0/",
# )


cc_binary(
  name = "graph",
  srcs = ["graph.cpp"]
)

cc_binary(
  name ="bst",
  srcs =["bst.cpp"]
)

cc_binary(
  name = "heap",
  srcs =["heap.cpp"]
)

cc_binary(
  name = "ntree",
  srcs = ["ntree.cpp"]
)


cc_binary(
  name = "adjacency_list",
  srcs = ["adjacency_list.cpp"]
)

cc_binary(
  name = "hash_map",
  srcs = ["hash_map.cpp"]
)

cc_binary(
  name = "hash_chaning",
  srcs = ["hash_chaning.cpp"]
)

cc_binary(
  name = "hash_cuckoo",
  srcs = ["hash_cuckoo.cpp"]
)

cc_binary(
  name = "hash_std",
  srcs = ["hash_std.cpp"]
)

cc_binary(
  name ="linear_search",
  srcs = ["linear_search.cpp"]
)

cc_binary(
  name ="merge_sort",
  srcs = ["merge_sort.cpp"]
)

cc_binary(
  name= "quick_sort",
  srcs =["quick_sort.cpp"],
  copts = ["-std=c++17"]

)


cc_binary(
  name= "linear_time_selection",
  srcs =["linear_time_selection.cpp"],
  copts = ["-std=c++17"]
)

cc_binary(
  name = "map_reduce",
  srcs = ["map_reduce.cpp"],
  copts = ["-std=c++17"]
)

cc_binary(
  name = "prime_calculator",
  srcs = glob(
    ["prime_calculator.cpp","include/**/*.hpp"],
  ),
  copts = ["-std=c++17"],
  deps = [
    "@boost//:filesystem",
    "@boost//:iterator",
    "@boost//:iostreams",
    "@boost//:functional",
    "@boost//:config",
    "@boost//:system",
  ]
)

cc_binary(
  name = "compute_waiting_times",
  srcs = [
    "compute_waiting_times.cpp"
  ],
  copts = ["-std=c++17"]
)

cc_binary(
  name = "fractional_knapsack_problem",
  srcs = [
    "fractional_knapsack_problem.cpp"
  ],
  copts = ["-std=c++17"]
)


cc_binary(
  name = "job_scheduling",
  srcs = [
    "job_scheduling.cpp"
  ],
  copts = ["-std=c++17"]
)

cc_binary(
  name = "mst",
  srcs = [
    "mst.cpp"
  ],
  copts = ["-std=c++17"]
)

cc_binary(
  name = "graph_coloring",
  srcs = [
    "graph_coloring.cpp"
  ],
  copts = ["-std=c++17"]
)
cc_binary(
  name = "welsh_powell",
  srcs = [
    "welsh_powell.cpp"
  ],
  copts = ["-std=c++17"]
)
