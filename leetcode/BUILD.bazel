package(default_visibility = ["//visibility:public"])


load("@rules_cc//cc:defs.bzl", "cc_binary")
load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_doc","rust_test")
# boost_deps() will re-download the tarball every time BUILD.boost
# changes, which is frustrating for doing development. Download it
# yourself, uncomment the below and change the path as appropriate
# for a faster iteration cycle on changes.
#
# new_local_repository(
#     name = "boost",
#     build_file = "@com_github_nelhage_rules_boost//:BUILD.boost",
#     path = "/home/nelhage/code/boost_1_71_0/",
# )


cc_binary(
  name = "sort_the_matrix_diagonally",
  srcs = ["sort_the_matrix_diagonally.cpp"]
)


cc_binary(
  name = "rotate_image",
  srcs = ["rotate_image.cpp"]
)


cc_binary(
  name = "numbers_with_same_consective_differences",
  copts = ["-std=c++17"],
  srcs = ["numbers_with_same_consective_differences.cpp"]
)



cc_binary(
  name = "vertical_order_traversal_of_a_binary_tree",
  copts = ["-std=c++17"],
  srcs = ["vertical_order_traversal_of_a_binary_tree.cpp"]
)

rust_binary(
  name = "running_sum_of_1d_array",
  srcs = ["running_sum_of_1d_array.rs"],
  edition = "2018",
  args = []
)

rust_test(
  name = "find_pivot_index",
  srcs = ["find_pivot_index.rs"],
  edition = "2018",
  args = []
)

cc_binary(
  name = "n_ary_tree_level_order_traversal",
  srcs = ["n_ary_tree_level_order_traversal.cpp"]
)

rust_binary(
  name = "binary_tree_pruning",
  srcs = ["binary_tree_pruning.rs"],
  edition="2021"
)

cc_binary(
  name = "construct_string_from_binary_tree",
  srcs = ["construct_string_from_binary_tree.cpp"]
)

cc_binary(
  name = "utf_8_validation",
  srcs = ["utf_8_validation.cpp"]
)

cc_binary(
  name = "binary_tree_inorder_traversal",
  srcs = ["binary_tree_inorder_traversal.cpp"]
)



cc_binary(
  name = "the_number_of_weak",
  srcs = ["the_number_of_weak.cpp"]
)


cc_binary(
  name = "maximum_performance_of_a_team",
  copts = ["-std=c++17"],
  srcs = ["maximum_performance_of_a_team.cpp"]
)

